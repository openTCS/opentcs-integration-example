apply plugin: 'java-library'
apply plugin: 'jacoco'

base.archivesName = name.toLowerCase()

repositories {
  mavenLocal()
  mavenCentral()
}

dependencies {
  implementation libs.slf4j.api

  compileOnly libs.google.code.findbugs
  testCompileOnly libs.google.code.findbugs

  testImplementation libs.junit.jupiter.api
  testImplementation libs.junit.jupiter.params
  testImplementation libs.junit.jupiter.engine

  testImplementation libs.hamcrest
  testImplementation libs.mockito
  testImplementation libs.assertj

  testRuntimeOnly libs.slf4j.simple
}

compileJava {
  options.release = 21
  options.compilerArgs << "-Xlint:all"
  options.compilerArgs << "-Xlint:-serial"
}

compileTestJava {
  options.release = 21
  options.compilerArgs << "-Xlint:all"
  options.compilerArgs << "-Xlint:-serial"
}

javadoc.options.addBooleanOption('Xdoclint:none', true)

task sourcesJar(type: Jar, dependsOn: classes, description: 'Creates a jar from the source files.') {
  archiveClassifier = 'sources'
  from sourceSets.main.allSource
}

test {
  useJUnitPlatform()
  // ignoreFailures = true
  systemProperties.put("java.awt.headless", "true")
}

ext {
  // Attributes for the AsciiDoc documentation to include code from source files
  javaSrcDir = sourceSets.main.java.srcDirs[0]
  javaClassesDir = sourceSets.main.output.classesDirs
  testSrcDir = sourceSets.test.java.srcDirs[0]
}
